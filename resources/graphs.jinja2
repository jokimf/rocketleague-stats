<!DOCTYPE html>
<html lang="en" style="display:  inline-block">
<head>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
    <title>Clown Gameplay</title>
    <link rel="icon" href="https://jok.im/rl/img/logo_grey.png">
    <link rel="preconnect" href="https://fonts.googleapis.com/">
    <link rel="preconnect" href="https://fonts.gstatic.com/" crossorigin="">
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
</head>
<body>
<header>
    <div class="header_container">
        <a href="/"><img src="https://jok.im/rl/img/logo_grey.png" alt="CG" width="50" height="50"></a>
        <a id="headline" href="/">CLOWN GAMEPLAY</a>
        <nav>
            <ul>
                <li><a href="/">Dashboard</a></li>
                <li><a href="/records">Records</a></li>
                <li><a href="/graphs">Graphs</a></li>
                <li><a href="#">Games</a></li>
            </ul>
        </nav>
    </div>
</header>
<div class="website-center-setup">
    <div class="graphs" style="padding-top: 15px">
        <button type="button" onclick="adjustGraphs(100)">Last 10</button>
        <button type="button" onclick="adjustGraphs(100)">Last 20</button>
        <button type="button" onclick="adjustGraphs(100)">Last 100</button>
        <button type="button" onclick="adjustGraphs(100)">Last 500</button>
        <button type="button" onclick="adjustGraphs(100)">Session</button>
        <button type="button" onclick="adjustGraphs(100)">Season</button>
        <button type="button" onclick="adjustGraphs(100)">All</button>
        <div class="graph-shell-small">
            <canvas id="grief"></canvas>
        </div>
        <div class="graph-shell-small">
            <canvas id="wins_last_20"></canvas>
        </div>
        <div class="graph-shell-small">
            <canvas id="performance_score"></canvas>
        </div>
        <div class="graph-shell-small">
            <canvas id="performance_goals"></canvas>
        </div>
        <div class="graph-shell-small">
            <canvas id="performance_assists"></canvas>
        </div>
        <div class="graph-shell-small">
            <canvas id="performance_saves"></canvas>
        </div>
        <div class="graph-shell-small">
            <canvas id="performance_shots"></canvas>
        </div>
        <div class="graph-shell-small">
            <canvas id="performance_share_score"></canvas>
        </div>
        <div class="graph-shell-small">
            <canvas id="performance_share_goals"></canvas>
        </div>
        <div class="graph-shell-small">
            <canvas id="performance_share_assists"></canvas>
        </div>
        <div class="graph-shell-small">
            <canvas id="performance_share_saves"></canvas>
        </div>
        <div class="graph-shell-small">
            <canvas id="performance_share_shots"></canvas>
        </div>
        <div class="graph-shell-small">
            <canvas id="datesChart"></canvas>
        </div>
        <div class="graph-shell-small">
            <canvas id="monthChart"></canvas>
        </div>
        <div class="graph-shell-small">
            <canvas id="yearsChart"></canvas>
        </div>
        <div class="graph-shell-small">
            <canvas id="weekdChart"></canvas>
        </div>
        <div class="graph-shell-small">
            <canvas id="winrate"></canvas>
        </div>
        <div class="graph-shell-small">
            <canvas id="mvp_lvp_score"></canvas>
        </div>
    </div>
</div>
</body>
<script>
    let allCharts = ["datesChart", "monthChart", "yearsChart", "weekdChart", "grief", "wins_last_20", "winrate", "solo_goals",
        "performance_score", "performance_goals", "performance_assists", "performance_saves", "performance_shots", "performance_share_score", "performance_share_goals",
        "performance_share_assists", "performance_share_saves", "performance_share_shots", "mvp_lvp_score"];

    let charts = []

    for (let i = 0; i < allCharts.length; i++) {
        fetchData(allCharts[i]).then(data => generateConfig(data)).then(config => {
            let chart = new Chart(document.getElementById(allCharts[i]).getContext('2d'), config);
            charts.push(chart);
        });
    }

    function adjustGraphs(last) {
        /*
        for (let i = 0; i < charts.length; i++) {
            charts[i].scales.x.min = 2500 //does not work?!
            console.log(charts[i]);
            charts[i].update();
            console.log("set");
        }
         */
    }

    async function fetchData(graphName) {
        return await fetch('https://jok.im/rl/data/' + graphName).then(json => json.json());
    }

    function generateConfig(inputJson) {
        let datasets = [];
        for (let i = 0; i < inputJson.data.datasets.length; i++) {
            datasets.push({
                label: inputJson.data.datasets[i].label,
                data: inputJson.data.datasets[i].data,
                borderColor: inputJson.data.datasets[i].borderColor,
                borderWidth: 4,
                pointRadius: 0
            })
        }
        return {
            type: inputJson.type,
            data: {
                labels: inputJson.data.labels,
                datasets: datasets
            },
            options: {
                maintainAspectRatio: false,
                responsive: true,
                plugins: {
                    title: {
                        display: true,
                        text: inputJson.data.title
                    },
                    legend: {
                        display: inputJson.options.show_legend
                    }
                },
                scales: {
                    x: {
                        min: inputJson.options.x_min,
                        max: inputJson.options.x_max
                    },
                    y: {
                        min: inputJson.options.y_min,
                        max: inputJson.options.y_max
                    }
                }
            },
            plugins: {}
        }
    }

    /*
        function changeX() {
            p(myChart);
        }

        function p(chart) {
            //chart.options.plugins.title.text = 'new title';
            let xmin = chart.scales.x.min
            let xmax = chart.scales.x.max
            chart.options.scales.x.min = xmin + 100;
            chart.update();
        }
        */
</script>
<style>
    h1, h2, h3, h4, h5, h6, p, blockquote, pre, ul, ol, dl, figure {
        margin-bottom: 15px;
    }

    body {
        margin: 0;
        font-size: 1em !important;
        color: #000000;
        background-color: #ffffff;
        font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
        line-height: 1.42em;
    }

    #headline {
        color: #cac8c8;
        font-size: 2em;
        display: inline;
        font-weight: bold;
        position: absolute;
        margin-top: 16px;
        margin-left: 10px;
        text-decoration: none;
    }

    header {
        background: #434343;
        position: sticky;
        top: 0
    }

    header::after {
        content: '';
        display: table;
        clear: both;
    }

    .header_container {
        width: 80%;
        margin: 0 auto
    }

    nav {
        float: right;
    }

    nav ul {
        margin: 0;
        padding: 0;
        list-style: none;
    }

    nav li {
        display: inline-block;
        margin-left: 35px;
        padding-top: 25px;
        position: relative;
    }

    nav a {
        color: #ffffff;
        text-decoration: none;
        text-transform: uppercase;
        font-size: 14px;
    }

    nav a:hover {
        color: #000;
    }

    nav a::before {
        content: '';
        display: block;
        height: 5px;
        background-color: #444;

        position: absolute;
        top: 0;
        width: 0;

        transition: all ease-in-out 250ms;
    }

    nav a:hover::before {
        width: 100%;
    }

    .website-center-setup {

        width: 80%;
        margin: auto;
        background: #fafafa;
    }

    .graph-shell-small {
        height: 200px;
        background-color: #eeeeee;
    }

    button {
        transition: background .25s, border-color .25s;
        background: rgba(40, 44, 52, .05);
        border: 1px solid transparent;
        border-radius: 6px;
        color: #000000;
        text-decoration: none !important;
        display: inline-block;
        font-size: .8rem;
        padding: 8px 16px;
        margin: 0 8px 8px 0;
        cursor: pointer;
        -webkit-user-select: none;
        -moz-user-select: none;
        user-select: none;
    }
</style>
</html>